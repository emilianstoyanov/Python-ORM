# Generated by Django 4.2.4 on 2023-10-24 11:46

from django.db import migrations


def set_age_group(apps, schema_editor):
    person_model = apps.get_model('main_app', 'Person')

    persons = person_model.objects.all()

    for person_record in persons:
        if person_record.age <= 12:
            person_record.age_group = 'Child'
        elif person_record.age <= 17:
            person_record.age_group = 'Teen'
        else:
            person_record.age_group = 'Adult'

    # We save changes to the base once, not every iteration
    person_model.objects.bulk_update(persons, ['age_group'])


def set_age_group_default(apps, schema_editor):
    person_model = apps.get_model('main_app', 'Person')

    age_group_default = person_model._meta.get_field('age_group').default

    for person in person_model.objects.all():
        person.age_group = age_group_default
        person.save()


# python .\manage.py makemigrations main_app --name  migrate_age_group --empty
class Migration(migrations.Migration):
    dependencies = [
        ('main_app', '0009_person'),
    ]

    operations = [
        migrations.RunPython(set_age_group, reverse_code=set_age_group_default)
    ]

# 1. Create an empty migration file.
    # python .\manage.py makemigrations main_app --name  migrate_age_group --empty
# 2. We create a function  for the specific purpose of changing the database.
# 3. We execute the command: python manage.py migrate
# 4. If we want to revert the changes, we run the command: python manage.py migrate main_app <name of previous migration>
